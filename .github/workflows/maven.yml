name: Java CI with Maven

on:
  push:
    branches: [ main ]
    paths:
      - .github/**
      - '**.xml'
      - 'src/**'
      - 'ide-config'
  pull_request:
    paths:
      - '**.xml'
      - 'src/**'
      - 'ide-config'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      current: ${{ steps.metadata.outputs.current }}
      next: ${{ steps.metadata.outputs.next }}
      snapshot: ${{ steps.metadata.outputs.snapshot }}
      artifact: ${{ steps.metadata.outputs.artifact }}
      group: ${{ steps.metadata.outputs.group }}
    strategy:
      fail-fast: false
      matrix:
        java: [ 11 ]
        graal: [ 21.3.0 ]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          project:
            - '.github/project.yml'

    # Fetches all tags for the repo
    - name: Fetch tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: yq - portable yaml processor
      uses: mikefarah/yq@v4.27.3

    - name: Project metadata
      id: metadata
      run: |
        CURRENT=$(yq '.release.current-version' .github/project.yml )
        NEXT=$(yq '.release.next-version' .github/project.yml)
        SNAPSHOT=$(yq '.release.snapshot-version' .github/project.yml)
        ARTIFACT=$(yq '.jitpack.artifact' .github/project.yml)
        GROUP=$(yq '.jitpack.group' .github/project.yml)
        echo $CURRENT $NEXT $SNAPSHOT $GROUP $ARTIFACT

        if git rev-parse "refs/tags/$NEXT" 2>&1; then
          echo "Next tag exists"
        else
          echo "Tag does not exist yet"
        fi

        echo "::set-output name=current::${CURRENT}"
        echo "::set-output name=next::${NEXT}"
        echo "::set-output name=snapshot::${SNAPSHOT}"
        echo "::set-output name=artifact::${ARTIFACT}"
        echo "::set-output name=group::${GROUP}"

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'temurin'
        cache: maven

    - name: Maven release
      if: ${{ github.ref == 'refs/heads/main' && steps.filter.outputs.project == 'true' }}
      id: mvn-build-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CURRENT: ${{ steps.metadata.outputs.current }}
        NEXT: ${{ steps.metadata.outputs.next }}
        SNAPSHOT: ${{ steps.metadata.outputs.snapshot }}
        ARTIFACT: ${{ steps.metadata.outputs.artifact }}
      run: |
        if git rev-parse "refs/tags/$NEXT" >/dev/null 2>&1; then
          echo "ðŸ”¹ Tagged release alreay exists"
          mvn -B --no-transfer-progress formatter:validate install --file pom.xml
          echo "::set-output name=release::false"
        else
          echo "ðŸ”¹ Creating new release"

          # Messy and not maven-y, but whatever.
          sed -i -r "s/-$CURRENT/-$NEXT/g" mc.sh
          sed -i -r "s/-$CURRENT/-$NEXT/g" README.md
          sed -i -r "s|<revision>.*</revision>|<revision>$NEXT</revision>|" pom.xml

          mvn -B --no-transfer-progress package

          git config user.name github-actions
          git config user.email github-actions@github.com

          git add -u
          git commit -m "ðŸ”– $NEXT"
          git push

          git tag $NEXT
          git push --tags

          sed -i -r "s|<revision>.*</revision>|<revision>$SNAPSHOT</revision>|" pom.xml
          git add pom.xml
          git commit -m "ðŸ”§ Prepare for next release"
          git push
          echo "::set-output name=release::true"
        fi

    - name: Build with Maven
      if: ${{ steps.filter.outputs.project == 'false' }}
      id: mvn-build
      run: |
        ./mvnw -B --no-transfer-progress formatter:validate install --file pom.xml

    - name: Pull Quarkus Native Builder Image ${{ matrix.graal }}-java${{ matrix.java }}
      if: ${{ success() && steps.mvn-build-release.outputs.release != 'true' }}
      run: docker pull quay.io/quarkus/ubi-quarkus-native-image:${{ matrix.graal }}-java${{ matrix.java }}

    - name: Native Quarkus build with maven
      if: ${{ success() && steps.mvn-build-release.outputs.release != 'true' }}
      run: |
        ./mvnw -B --no-transfer-progress clean install -Dnative -Dimages \
            -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-native-image:${{ matrix.graal }}-java${{ matrix.java }}

