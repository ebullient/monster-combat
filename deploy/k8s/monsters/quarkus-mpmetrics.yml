---
apiVersion: v1
kind: Service
metadata:
  namespace: ebullientworks
  labels:
    app.kubernetes.io/name: mc-quarkus-mpmetrics
    app.kubernetes.io/version: latest-jvm
    prometheus: 'true'
    type: mc-quarkus
  name: mc-quarkus-mpmetrics
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: mc-quarkus-mpmetrics
    app.kubernetes.io/version: latest-jvm
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ebullientworks
  labels:
    app.kubernetes.io/name: mc-quarkus-mpmetrics
    app.kubernetes.io/version: latest-jvm
  name: mc-quarkus-mpmetrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mc-quarkus-mpmetrics
      app.kubernetes.io/version: latest-jvm
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mc-quarkus-mpmetrics
        app.kubernetes.io/version: latest-jvm
    spec:
      containers:
      - image: ebullient/mc-quarkus-mpmetrics:latest-jvm
        imagePullPolicy: IfNotPresent
        name: mc-quarkus-micrometer
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
